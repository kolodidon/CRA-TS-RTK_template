{"version":3,"sources":["store/todos/todos.initialState.ts","store/todos/todos.reducer.ts","store/todos/todos.slice.ts","store/root-reducer.ts","store/store.ts","reportWebVitals.js","components/CreateTodo.tsx","components/Todo.tsx","components/TodoList.tsx","app/App.tsx","index.js"],"names":["todosInitialState","id","uuid","desc","isComplete","todosReducer","create","reducer","state","action","push","payload","prepare","todosSlice","createSlice","name","initialState","reducers","createTodoActionCreator","actions","todos","middleware","getDefaultMiddleware","logger","configureStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CreateTodo","dispatch","useDispatch","useState","newTodoInput","setNewTodoInput","onSubmit","e","preventDefault","length","htmlFor","onChange","target","value","type","Todo","key","todo","TodoList","className","map","i","App","useSelector","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"yPAGaA,EAA6B,CACxC,CACEC,GAAIC,cACJC,KAAM,wFACNC,YAAY,ICFHC,EAAe,CAC1BC,OAAQ,CACNC,QAAS,SACPC,EACAC,GAEAD,EAAME,KAAKD,EAAOE,UAEpBC,QAAS,gBAAGT,EAAH,EAAGA,KAAH,MAAiC,CACxCQ,QAAS,CACPV,GAAIC,cACJC,OACAC,YAAY,OCbPS,EAAaC,YAAY,CACpCC,KAAM,QACNC,aAAchB,EACdiB,SAAUZ,IAKAa,EAERL,EAHFM,QACEb,OCVSC,EAAU,CACrBa,MAAOP,EAAWN,SCEdc,EAAU,sBAAOC,eAAP,CAA+BC,MAEhCC,cAAe,CAC5BjB,UACAc,eCGaI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBC4BCQ,EA7B0B,WACvC,IAAMC,EAAWC,cAD4B,EAGLC,mBAAiB,IAHZ,mBAGtCC,EAHsC,KAGxBC,EAHwB,KAgB7C,OACE,uBAAMC,SAZoB,SAACC,GAC3BA,EAAEC,iBACGJ,EAAaK,SAClBR,EAASjB,EAAwB,CAAEf,KAAMmC,KACzCC,EAAgB,MAQhB,UACE,uBAAOK,QAAQ,WAAf,6EACA,uBACEC,SARuB,SAACJ,GAC5BF,EAAgBE,EAAEK,OAAOC,QAQrB9C,GAAG,WACH8C,MAAOT,IAET,wBAAQU,KAAK,SAAb,kECrBSC,EADc,SAAC,GAAD,EAAGC,IAAH,IAAQC,EAAR,EAAQA,KAAR,OAAmB,6BAAKA,EAAKhD,QCW3CiD,EAZiB,SAAC,GAAe,IAAbhC,EAAY,EAAZA,MACjC,OACE,qBAAIiC,UAAU,YAAd,UACE,0FACCjC,GACCA,EAAMkC,KAAI,SAACH,EAAMI,GAAP,OACR,cAAC,EAAD,CAAoBJ,KAAMA,GAAfA,EAAKlD,WCWXuD,G,MAhBH,WACV,IAAMpC,EAAQqC,aAAY,SAACjD,GAAD,OAAkBA,EAAMY,SAElD,OACE,sBAAKiC,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,8MACA,cAAC,EAAD,OAEF,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAUjC,MAAOA,WCTzBsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAG1BtC,M","file":"static/js/main.edb8719f.chunk.js","sourcesContent":["import { v1 as uuid } from 'uuid';\r\nimport { ITodo } from '../../../type';\r\n\r\nexport const todosInitialState: ITodo[] = [\r\n  {\r\n    id: uuid(),\r\n    desc: 'Развернуть todo на RTK+TS',\r\n    isComplete: false,\r\n  },\r\n];","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { v1 as uuid } from 'uuid';\r\n\r\nimport { ITodo } from '../../../type';\r\n\r\nexport const todosReducer = {\r\n  create: {\r\n    reducer: (\r\n      state: ITodo[],\r\n      action: PayloadAction<{ id: string; desc: string; isComplete: boolean }>\r\n    ) => {\r\n      state.push(action.payload);\r\n    },\r\n    prepare: ({ desc }: { desc: string }) => ({\r\n      payload: {\r\n        id: uuid(),\r\n        desc,\r\n        isComplete: false,\r\n      },\r\n    }),\r\n  }\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { todosInitialState } from './todos.initialState';\r\nimport { todosReducer } from './todos.reducer';\r\n\r\nexport const todosSlice = createSlice({\r\n  name: 'todos',\r\n  initialState: todosInitialState,\r\n  reducers: todosReducer\r\n});\r\n\r\nexport const {\r\n  actions: {\r\n    create: createTodoActionCreator\r\n  },\r\n} = todosSlice;","import { todosSlice } from './todos/todos.slice';\r\n\r\nexport const reducer = {\r\n  todos: todosSlice.reducer\r\n};","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport { reducer } from './root-reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nexport default configureStore({\r\n  reducer,\r\n  middleware,\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { FC, FormEvent, useState, ChangeEvent } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { createTodoActionCreator } from '../store/todos/todos.slice';\r\n\r\ninterface ICreateTodoProps { }\r\n\r\nconst CreateTodo: FC<ICreateTodoProps> = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [newTodoInput, setNewTodoInput] = useState<string>('');\r\n\r\n  const handleCreateNewTodo = (e: FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    if (!newTodoInput.length) return;\r\n    dispatch(createTodoActionCreator({ desc: newTodoInput }));\r\n    setNewTodoInput('');\r\n  };\r\n  \r\n  const handleNewInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    setNewTodoInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleCreateNewTodo}>\r\n      <label htmlFor=\"new-todo\">Новый пункт: </label>\r\n      <input\r\n        onChange={handleNewInputChange}\r\n        id=\"new-todo\"\r\n        value={newTodoInput}\r\n      />\r\n      <button type=\"submit\">Добавить</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CreateTodo","import React, { FC } from 'react'\r\nimport { ITodo } from '../../type'\r\n\r\ninterface ITodoProps {\r\n  key: string;\r\n  todo: ITodo\r\n}\r\n\r\nconst Todo: FC<ITodoProps> = ({ key, todo }) => <li>{todo.desc}</li>\r\nexport default Todo","import React, { FC } from 'react'\r\nimport { ITodo } from '../../type'\r\nimport { Todo } from './'\r\n\r\ninterface ITodoList {\r\n  todos: ITodo[]\r\n}\r\nconst TodoList: FC<ITodoList> = ({ todos }) => {\r\n  return (\r\n    <ul className=\"App__list\">\r\n      <h2>Список дел:</h2>\r\n      {todos &&\r\n        todos.map((todo, i: number) => (\r\n          <Todo key={todo.id} todo={todo} />\r\n        ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TodoList","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { State } from '../../type';\nimport { CreateTodo, TodoList } from '../components/';\n\nimport './App.css';\n\nconst App = function () {\n  const todos = useSelector((state: State) => state.todos);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__header\">\n        <h1>Шаблон развёрнутого проекта на RTK+TS</h1>\n        <CreateTodo />\n      </div>\n      <div className=\"App__body\">\n        <TodoList todos={todos} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport reportWebVitals from './reportWebVitals'\n\nimport './index.css';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}